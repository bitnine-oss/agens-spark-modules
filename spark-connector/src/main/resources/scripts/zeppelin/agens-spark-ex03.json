{"paragraphs":[{"text":"import net.bitnine.agens.spark.AgensBuilder\nimport org.opencypher.okapi.api.graph.{CypherResult, GraphName, Namespace}\n\nimport net.bitnine.agens.spark.Agens.ResultsAsDF\nimport net.bitnine.agens.livy.util.SchemaConverters\nimport org.apache.avro.SchemaBuilder\n\n\nval agens = AgensBuilder(spark).build\t//\t.default(spark)\n\nval datasource = \"modern\"\n\nval graphModern = agens.graph(datasource)\n\n// default namespace: session\nagens.catalog.store(\"modern\", graphModern)","user":"anonymous","dateUpdated":"2020-09-23T21:45:41+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1600863948299_-1866860739","id":"20200923-212548_1619519223","dateCreated":"2020-09-23T21:25:48+0900","dateStarted":"2020-09-23T21:45:41+0900","dateFinished":"2020-09-23T21:45:42+0900","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1471"},{"text":"// 3) Register a file system graph source to the catalog\n// Note: if files were stored in HDFS, the file path would indicate so by starting with hdfs://\nval csvFolder = \"hdfs://minmac:9000/user/agens/samples/csv\"\nagens.registerSource(Namespace(\"purchases\"), agens.fsGraphsource(rootPath = csvFolder).csv)\n\nprintln(\"\\n** [start] graphs: \"+agens.catalog.graphNames.map(_.graphName).mkString(\"[\",\"],[\",\"]\"))\n\n// access the graph from the catalog via its qualified graph name\nval purchaseNetwork = agens.catalog.graph(\"purchases.products\")","user":"anonymous","dateUpdated":"2020-09-23T21:45:48+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1600864001484_-828082218","id":"20200923-212641_1591969407","dateCreated":"2020-09-23T21:26:41+0900","dateStarted":"2020-09-23T21:45:48+0900","dateFinished":"2020-09-23T21:45:48+0900","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1472"},{"text":"val result1 = purchaseNetwork.cypher(\"FROM GRAPH purchases.products MATCH (c:Customer) RETURN c\")\nresult1.show\nval result2 = purchaseNetwork.cypher(\"FROM GRAPH purchases.products MATCH (p:Product) RETURN p\")\nresult2.show\nval result3 = purchaseNetwork.cypher(\"FROM GRAPH purchases.products MATCH ()-[e]-() RETURN e\")\nresult3.show","user":"anonymous","dateUpdated":"2020-09-23T21:38:20+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1600864157066_-936496934","id":"20200923-212917_2005501769","dateCreated":"2020-09-23T21:29:17+0900","dateStarted":"2020-09-23T21:38:20+0900","dateFinished":"2020-09-23T21:38:26+0900","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1473"},{"text":"// 5) Create new edges between users and customers with the same name\nval recommendationGraph = agens.cypher(\n\t\"\"\"|FROM GRAPH modern\n\t   |MATCH (p:person)\n\t   |FROM GRAPH purchases.products\n\t   |MATCH (c:Customer)\n\t   |WHERE p.name = c.name\n\t   |CONSTRUCT ON modern, purchases.products\n\t   |  CREATE (p)-[:IS]->(c)\n\t   |RETURN GRAPH\n\t\t\"\"\".stripMargin\n).graph\n\nval tmp = s\"file:///tmp/bgmin/${System.currentTimeMillis()}\"\nval fs = agens.fsGraphsource(tmp).parquet\nfs.store(GraphName(\"recommendation\"), recommendationGraph)","user":"anonymous","dateUpdated":"2020-09-23T21:45:53+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1600864174616_141711563","id":"20200923-212934_671785058","dateCreated":"2020-09-23T21:29:34+0900","dateStarted":"2020-09-23T21:45:53+0900","dateFinished":"2020-09-23T21:45:57+0900","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1474"},{"text":"// 6) Query for product recommendations\nval recommendations:CypherResult = recommendationGraph.cypher(\n\t\"\"\"|MATCH (person:person)-[:knows]-(friend:person),\n\t   |      (friend)-[:IS]->(customer:Customer),\n\t   |      (customer)-[:BOUGHT]->(product:Product)\n\t   |RETURN DISTINCT product.title AS recommendation, person.name AS for\n\t   |ORDER BY recommendation\n\t\t\"\"\".stripMargin)\n\nrecommendations.show\n","user":"anonymous","dateUpdated":"2020-09-23T21:46:00+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1600864220701_-1968631873","id":"20200923-213020_1135718956","dateCreated":"2020-09-23T21:30:20+0900","dateStarted":"2020-09-23T21:46:00+0900","dateFinished":"2020-09-23T21:46:08+0900","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1475"},{"text":"// need spark-avro library in livy-jobs module\nval saveName = \"recommendations\"\nval savePath = agens.saveResultAsAvro(recommendations, saveName)\nprintln(s\"savePath = $savePath\")","user":"anonymous","dateUpdated":"2020-09-23T21:46:18+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1600864229883_1188097470","id":"20200923-213029_1980025739","dateCreated":"2020-09-23T21:30:29+0900","dateStarted":"2020-09-23T21:46:18+0900","dateFinished":"2020-09-23T21:46:26+0900","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1476"},{"text":"// import net.bitnine.agens.spark.Agens.ResultsAsDF\n// import net.bitnine.agens.livy.util.SchemaConverters\n// import org.apache.avro.SchemaBuilder\n\nval df = recommendations.asDataFrame\nval build = SchemaBuilder.record(saveName).namespace(SchemaConverters.AGENS_AVRO_NAMESPACE)\nval avroSchema = SchemaConverters.convertStructToAvro(df.schema, build, SchemaConverters.AGENS_AVRO_NAMESPACE)\n// true: pretty print\nprintln( avroSchema.toString(true) )","user":"anonymous","dateUpdated":"2020-09-23T21:46:35+0900","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1600864384386_-563620211","id":"20200923-213304_503964135","dateCreated":"2020-09-23T21:33:04+0900","dateStarted":"2020-09-23T21:46:35+0900","dateFinished":"2020-09-23T21:46:35+0900","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1477"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1600864954020_554349038","id":"20200923-214234_1548102469","dateCreated":"2020-09-23T21:42:34+0900","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1478"}],"name":"agens-spark-ex03","id":"2FMRTWTRW","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}